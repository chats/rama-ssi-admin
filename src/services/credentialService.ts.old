import { apiService } from './api';
import { ApiResponse } from '@/types/common.types';
import { CredentialFilterOptions } from '@/types/credential.types';

const creadentialService = {

    createCredentialOfferDocument: (options: CredentialOfferOptions) => {
        return {}
    },

    getRecords: async (options: CredentialFilterOptions): Promise<ApiResponse<Credential[]>> => {
        
        const { data } = await apiService.get<ApiResponse<Credential[]>>('/issue-credential-2.0/records', {
            params: options,
        });
        return data;
    },

    getRecordById: async (credExId: string): Promise<ApiResponse<Credential>> => {
        const { data } = await apiService.get<ApiResponse<Credential>>(`/issue-credential-2.0/records/${credExId}`);
        return data;
    },

    deleteRecord: async (credExId: string): Promise<ApiResponse<Credential>> => {
        const { data } = await apiService.delete<ApiResponse<Credential>>(`/issue-credential-2.0/records/${credExId}`);
        return data;
    },

    /**
     * (Issuer) Send credential offer to holder
     */
    sendOffer: async (offerDocument: unknown): Promise<ApiResponse<Credential>> => {
        const { data } = await apiService.post<ApiResponse<Credential>>('/issue-credential-2.0/send-offer', offerDocument);
        return data;
    },

    /**
     * (Holder) Send issuer a credential request
     */
    sendRequest: async (requestDocument: unknown): Promise<ApiResponse<Credential>> => {
        const { data } = await apiService.post<ApiResponse<Credential>>('/issue-credential-2.0/send-request', requestDocument);
        return data;
    },


    /**
     *  (Holder) Send issuer a credential proposal
     */
    sendProposal: async (proposalDocument: unknown): Promise<ApiResponse<Credential>> => {
        const { data } = await apiService.post<ApiResponse<Credential>>('/issue-credential-2.0/send-proposal', proposalDocument);
        return data;
    },

    /**
     * (Issuer) Create a credential record without sending it
     */
    createCredential: async (credentialDocument: unknown): Promise<ApiResponse<Credential>> => {
        const { data } = await apiService.post<ApiResponse<Credential>>('/issue-credential-2.0/send', credentialDocument);
        return data;
    },

}

export default creadentialService;